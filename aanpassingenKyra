//volledige code

//levens toevoegen
var leven = {
  aantalLevens: 1,
}

//De text bovenin die aangeeft hoeveel levens je nog hebt.
 push();
    textSize(20);
    text("Aantal levens:" + leven.aantalLevens,10,25);
  pop();

 //Zorgt ervoor dat er levens afgaan
  if (eve.wordtGeraakt(alice) || eve.wordtGeraakt(bob)) {
    leven.aantalLevens --;
  }

//Zorgt ervoor dat het spel stopt wanneer de levens op zijn
  if (leven.aantalLevens <= 0) {
    background('red');
    fill('white');
    text('Je hebt verloren!',30,300);
    noLoop();
  }

//vervang beweeg() bij class Jos
beweeg() {
    if (keyIsDown(65)) {
      this.x -= this.stapGrootte;
      this.frameNummer = 2;
    }
    if (keyIsDown(68)) {
      this.x += this.stapGrootte;
      this.frameNummer = 1;
    }
    if (keyIsDown(87)) {
      this.y -= this.stapGrootte;
      this.frameNummer = 4;
    }
    if (keyIsDown(83)) {
      this.y += this.stapGrootte;
      this.frameNummer = 5;
    }

// onder de toon() functie in de Jos class

verloren() {
  background('rgb(179,18,18)');
  fill('white');
  text('Je hebt verloren!',50,300);
  noLoop();
  }
  
gewonnen() {
  background('green');
  fill('white');
  text("Je hebt gewonnen!",30,300);
  noLoop();
  }

//plekje boven de preload
class Oranje {
  constructor(x,y,width,height) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
  }
  toon() {
    push();
    fill("orange");
    rect(this.x,this.y,this.width,this.height);
    pop();
  }
}

//In de setup
oranjeKolom = new Oranje(raster.celGrootte * floor(random() * raster.aantalKolommen),0,raster.celGrootte,canvas.height);
  oranjeRij = new Oranje(0, raster.celGrootte * floor(random() * raster.aantalRijen),canvas.width,raster.celGrootte);

//in de draw
 oranjeKolom.toon();
  oranjeRij.toon();

//vervang de win/verlies
if (leven.aantalLevens <= 0) {
    eve.verloren()
  }
  
  if (eve.gehaald) {
   eve.gewonnen()
  }
}
